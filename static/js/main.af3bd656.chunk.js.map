{"version":3,"sources":["types.js","components/SearchForm/SearchForm.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["typesForMoviesList","PropTypes","arrayOf","shape","title","string","isRequired","description","imgUrl","imdbUrl","SearchForm","state","query","filterByTwoParams","array","firstSortingParam","secondSortingParam","filter","firstParam","secondParam","firstParamLowerCase","toLowerCase","secondParamLowerCase","includes","onFilter","event","setState","target","value","this","props","list","filterList","queryLowerCase","className","htmlFor","type","id","placeholder","onChange","PureComponent","defaultProps","MovieCard","memo","src","alt","href","propTypes","MoviesList","movies","map","movie","key","imdbId","App","moviesFromServer","filterMovies","newList","ReactDOM","render","document","getElementById"],"mappings":"wyEAEaA,EAAqBC,IAAUC,QAC1CD,IAAUE,MAAM,CACdC,MAAOH,IAAUI,OAAOC,WACxBC,YAAaN,IAAUI,OACvBG,OAAQP,IAAUI,OAAOC,WACzBG,QAASR,IAAUI,OAAOC,cCHjBI,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAkBEC,kBAAoB,SAClBC,EACAF,EACAG,EACAC,GAJkB,OAMlBF,EAAMG,QAAO,YAGN,IAFgBC,EAEjB,EAFHH,GACqBI,EAClB,EADHH,GAEKI,EAAsBF,EAAWG,cACjCC,EAAuBH,EAAYE,cAEzC,OAAQD,EAAoBG,SAASX,IAClCU,EAAqBC,SAASX,OAhCvC,EAoCEY,SAAW,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAEd,MAAOa,EAAME,OAAOC,SApC1D,wDAKE,WACE,MAA6BC,KAAKC,MAA1BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRC,EAAiBJ,KAAKlB,MAAMC,MAAMS,cAQxCW,EAPqBH,KAAKhB,kBAAL,YACfkB,GACJE,EACA,QACA,kBAZN,oBAsCE,WACE,OACE,oCACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOC,QAAQ,eAAeD,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEE,KAAK,OACLC,GAAG,eACHH,UAAU,QACVI,YAAY,mBACZV,MAAOC,KAAKlB,MAAMC,MAClB2B,SAAUV,KAAKL,mBAtD/B,GAAgCgB,iBAqEhC9B,EAAW+B,aAAe,CACxBV,KAAM,I,gBCtEKW,EAAYC,gBACvB,gBACEvC,EADF,EACEA,MACAG,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QAJF,OAME,yBAAKyB,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEU,IAAKpC,EACLqC,IAAI,gBAIV,yBAAKX,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEU,IAAI,wBACJC,IAAI,WAIV,yBAAKX,UAAU,iBACb,uBAAGA,UAAU,cAAc9B,KAI/B,yBAAK8B,UAAU,WACZ3B,EACD,6BACA,uBAAGuC,KAAMrC,GAAT,cAOViC,EAAUK,UAAY,CACpB3C,MAAOH,IAAUI,OAAOC,WACxBC,YAAaN,IAAUI,OACvBG,OAAQP,IAAUI,OAAOC,WACzBG,QAASR,IAAUI,OAAOC,YAG5BoC,EAAUD,aAAe,CACvBlC,YAAa,IC/CR,IAAMyC,EAAaL,gBACxB,gBAAGM,EAAH,EAAGA,OAAH,OACE,yBAAKf,UAAU,UACZe,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,WAM1CH,EAAWD,UAAY,CACrBE,OAAQjD,GAGVgD,EAAWP,aAAe,CACxBQ,OAAQ,ICfH,IAAMK,EAAb,4MACE3C,MAAQ,CACNsC,OAAQM,GAFZ,EAKEC,aAAe,SAAAC,GAAO,OACpB,EAAK/B,SAAS,CAAEuB,OAAO,YAAKQ,MANhC,4CASE,WACE,OACE,yBAAKvB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEH,KAAMwB,EACNvB,WAAYH,KAAK2B,eAEnB,kBAAC,EAAD,CAAYP,OAAQpB,KAAKlB,MAAMsC,UAEjC,yBAAKf,UAAU,WAAf,0BAnBR,GAAyBM,iBCDzBkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.af3bd656.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const typesForMoviesList = PropTypes.arrayOf(\n  PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }),\n);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { typesForMoviesList } from '../../types';\n\nexport class SearchForm extends PureComponent {\n  state = {\n    query: '',\n  };\n\n  componentDidUpdate() {\n    const { list, filterList } = this.props;\n    const queryLowerCase = this.state.query.toLowerCase();\n    const filteredList = this.filterByTwoParams(\n      [...list],\n      queryLowerCase,\n      'title',\n      'description',\n    );\n\n    filterList(filteredList);\n  }\n\n  filterByTwoParams = (\n    array,\n    query,\n    firstSortingParam,\n    secondSortingParam,\n  ) => (\n    array.filter(({\n      [firstSortingParam]: firstParam,\n      [secondSortingParam]: secondParam,\n    }) => {\n      const firstParamLowerCase = firstParam.toLowerCase();\n      const secondParamLowerCase = secondParam.toLowerCase();\n\n      return (firstParamLowerCase.includes(query)\n      || secondParamLowerCase.includes(query));\n    })\n  )\n\n  onFilter = event => this.setState({ query: event.target.value });\n\n  render() {\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={this.state.query}\n                onChange={this.onFilter}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  list: typesForMoviesList,\n  filterList: PropTypes.func.isRequired,\n};\n\nSearchForm.defaultProps = {\n  list: [],\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = memo(\n  ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  }) => (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  ),\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React, { memo } from 'react';\nimport { typesForMoviesList } from '../../types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = memo(\n  ({ movies }) => (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  ),\n);\n\nMoviesList.propTypes = {\n  movies: typesForMoviesList,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { PureComponent } from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { SearchForm } from './components/SearchForm';\nimport { MoviesList } from './components/MoviesList';\n\nexport class App extends PureComponent {\n  state = {\n    movies: moviesFromServer,\n  }\n\n  filterMovies = newList => (\n    this.setState({ movies: [...newList] })\n  )\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchForm\n            list={moviesFromServer}\n            filterList={this.filterMovies}\n          />\n          <MoviesList movies={this.state.movies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}