{"version":3,"sources":["types.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchForm/SearchForm.js","App.js","index.js"],"names":["typesForMoviesList","PropTypes","arrayOf","shape","title","string","isRequired","description","imgUrl","imdbUrl","MovieCard","memo","className","src","alt","href","propTypes","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchForm","state","query","filterByTwoParams","array","firstSortingParam","secondSortingParam","filter","firstParam","secondParam","firstParamLowerCase","toLowerCase","secondParamLowerCase","includes","queryLowerCase","this","filteredList","props","list","htmlFor","type","id","placeholder","value","onChange","event","setState","target","PureComponent","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"wyEAEaA,EAAqBC,IAAUC,QAC1CD,IAAUE,MAAM,CACdC,MAAOH,IAAUI,OAAOC,WACxBC,YAAaN,IAAUI,OACvBG,OAAQP,IAAUI,OAAOC,WACzBG,QAASR,IAAUI,OAAOC,cCHjBI,G,YAAYC,gBACvB,gBACEP,EADF,EACEA,MACAG,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QAJF,OAME,yBAAKG,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKL,EACLM,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcR,KAI/B,yBAAKQ,UAAU,WACZL,EACD,6BACA,uBAAGQ,KAAMN,GAAT,eAOVC,EAAUM,UAAY,CACpBZ,MAAOH,IAAUI,OAAOC,WACxBC,YAAaN,IAAUI,OACvBG,OAAQP,IAAUI,OAAOC,WACzBG,QAASR,IAAUI,OAAOC,YAG5BI,EAAUO,aAAe,CACvBV,YAAa,IC/CR,IAAMW,EAAaP,gBACxB,gBAAGQ,EAAH,EAAGA,OAAH,OACE,yBAAKP,UAAU,UACZO,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,WAM1CH,EAAWF,UAAY,CACrBG,OAAQnB,GAGVkB,EAAWD,aAAe,CACxBE,OAAQ,ICjBH,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,kBAAoB,SAClBC,EACAF,EACAG,EACAC,GAJkB,OAMlBF,EAAMG,QAAO,YAGN,IAFgBC,EAEjB,EAFHH,GACqBI,EAClB,EADHH,GAEKI,EAAsBF,EAAWG,cACjCC,EAAuBH,EAAYE,cAEzC,OAAQD,EAAoBG,SAASX,IAClCU,EAAqBC,SAASX,OAnBvC,4CAuBE,WAAU,IAAD,OACDY,EAAiBC,KAAKd,MAAMC,MAAMS,cAClCK,EAAeD,KAAKZ,kBAAL,YACfY,KAAKE,MAAMC,MACfJ,EACA,QACA,eAGF,OACE,oCACE,yBAAK1B,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO+B,QAAQ,eAAe/B,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEgC,KAAK,OACLC,GAAG,eACHjC,UAAU,QACVkC,YAAY,mBACZC,MAAOR,KAAKd,MAAMC,MAClBsB,SAAU,SAACC,GACT,EAAKC,SAAS,CAAExB,MAAOuB,EAAME,OAAOJ,cAO9C,kBAAC,EAAD,CAAY5B,OAAQqB,SAvD5B,GAAgCY,iBAiEhC5B,EAAWP,aAAe,CACxByB,KAAM,ICjED,IAAMW,EAAb,4JACE,WACE,OACE,yBAAKzC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAY8B,KAAMY,KAEpB,yBAAK1C,UAAU,WAAf,0BAPR,GAAyBwC,iBCAzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5146dd66.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const typesForMoviesList = PropTypes.arrayOf(\n  PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }),\n);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = memo(\n  ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  }) => (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  ),\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React, { memo } from 'react';\nimport { typesForMoviesList } from '../../types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = memo(\n  ({ movies }) => (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  ),\n);\n\nMoviesList.propTypes = {\n  movies: typesForMoviesList,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { PureComponent } from 'react';\nimport { typesForMoviesList } from '../../types';\nimport { MoviesList } from '../MoviesList';\n\nexport class SearchForm extends PureComponent {\n  state = {\n    query: '',\n  };\n\n  filterByTwoParams = (\n    array,\n    query,\n    firstSortingParam,\n    secondSortingParam,\n  ) => (\n    array.filter(({\n      [firstSortingParam]: firstParam,\n      [secondSortingParam]: secondParam,\n    }) => {\n      const firstParamLowerCase = firstParam.toLowerCase();\n      const secondParamLowerCase = secondParam.toLowerCase();\n\n      return (firstParamLowerCase.includes(query)\n      || secondParamLowerCase.includes(query));\n    })\n  )\n\n  render() {\n    const queryLowerCase = this.state.query.toLowerCase();\n    const filteredList = this.filterByTwoParams(\n      [...this.props.list],\n      queryLowerCase,\n      'title',\n      'description',\n    );\n\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={this.state.query}\n                onChange={(event) => {\n                  this.setState({ query: event.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={filteredList} />\n      </>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  list: typesForMoviesList,\n};\n\nSearchForm.defaultProps = {\n  list: [],\n};\n","import React, { PureComponent } from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { SearchForm } from './components/SearchForm';\n\nexport class App extends PureComponent {\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchForm list={moviesFromServer} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}